import{d as N,X as w,f as l,i as A,aq as b,ar as y,Z as I,o as g,c as h,b as c,ao as v,ap as D,n as G,af as L,_ as O}from"./index-619e6e2b.js";const R=N({__name:"GridLayoutRowNode",props:{node:{}},setup(r){const{insertNode:i,watchNode:n,getParentNode:p,spliceNode:u,setNodeAttrs:_}=w(),e=r,f=l(()=>({"--cols":e.node.baseAttrs.cols,"--col-gap":e.node.baseAttrs.colGap,"--align-items":e.node.baseAttrs.alignItems})),t=A(!1),m=l(()=>{const s=e.node.nodes,o=e.node.baseAttrs.cols;if(!t.value)for(s.length>o&&u(e.node,o);s.length<o;)i(e.node.instanceID,"GRID_LAYOUT_COL");return s});return n(e.node,"row",({value:s})=>{const o=p(e.node),a=b("GRID_LAYOUT_ROW");a.baseAttrs=y.cloneDeep(e.node.baseAttrs);let d=o.nodes.indexOf(e.node);s==="bottom"&&(d+=1),o.nodes.splice(d,0,a)}),n(e.node,"delete-node",()=>{t.value=!0,_(e.node.instanceID,"baseAttrs","cols",e.node.baseAttrs.cols-1),I(0).then(()=>{t.value=!1})}),(s,o)=>(g(),h("div",{class:G(s.$style.row),style:L(f.value)},[c(v,{id:s.node.instanceID},null,8,["id"]),c(D,{nodes:m.value},null,8,["nodes"])],6))}}),x="_row_1n14r_1",C={row:x},S={$style:C},k=O(R,[["__cssModules",S]]);export{k as default};
